-- 쿼리1_조인쿼리.sql

use testdb;

/* 조인(join)이란, 두개 이상의 테이블을 연결하여 데이터를 검색하는 방법
<조인(join)의 종류>
cross join 크로스조인
inner join 이너조인(내부조인)
outer join 아우터조인(외부조인)
self join 셀프조인
*/

-- cross join 크로스조인
-- 한쪽 테이블의 각 행마다 다른쪽 테이블의 모든 행이 한번씩 매칭되는 조인
-- m*n개의 경우의 수가 발생하므로 속도의 저하를 일으킬 수 있음. where절로 필터링 권장!!
select 이름, 부서.부서번호, 부서명
from 사원 cross join 부서
where 이름 = '배재용';
-- 부서번호는 사원테이블과 부서테이블 양쪽에 모두 존재하므로 명식적으로 테이블이름.컬럼명 형태가 필요!!

-- inner join (이너조인, 내부조인)
-- 교집합. 각 테이블에서 조인조건에 일치하는 공통의 데이터만 조인
-- on절을 이용하여 조인의 기준(=양쪽에 있는 공통컬럼)을 반드시 지정해야함. 조건에 만족하지 않는 데이터는 배제
-- 명시적으로 inner join을 사용하나 단순히 join만 사용해도 inner join으로 인식
select 사원번호, 이름, 직위, 부서.부서번호, 부서명
from 사원 inner join 부서
on 사원.부서번호 = 부서.부서번호 -- 사원테이블의 FK = 부서테이블의 PK 
where 이름 = '이소미';

-- 고객회사들이 주문한 주문건수를 많은 순서대로 출력
-- (요청) 고객번호, 담당자명, 고객회사명, 주문건수
select 고객.고객번호, 담당자명, 고객회사명, count(*) as 주문건수
from 고객 join 주문
on 고객.고객번호 = 주문.고객번호
group by 고객번호, 담당자명, 고객회사명
order by 주문건수 desc;

-- (요청) 주문번호, 제품번호, 제품명, 주문수량, 단가
select 주문번호, 제품.제품번호, 제품명, 주문수량, 주문세부.단가
from 주문세부 join 제품
on 주문세부.제품번호 = 제품.제품번호
order by 주문번호;

-- (요청) 고객번호, 담당자명, 고객회사명, 주문금액합






















